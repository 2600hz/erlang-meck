* Write tutorial
* Allow calling original function from within expect fun:
  - fun() -> Result = mock:call_original(Args), use(Result) end
* Mock a module only from the perspective of a specific caller (calling process)
  - mock:new(mymod, [{restrict, pid()}]):
    > only the caller pid() would hit the mocked module
  - or even better, all pids belonging to a specific application
  - Would enable mocking of the inet, gen_tcp modules etc
* Mocking of parameterized modules
* Fix API exceptions to be thrown from inteface functions with erlang:error/2
* Make it possible to extract call history from the mocked module
* Delete functions from the mocked module (needed?)
* Handle mocking of sticky modules (possible today, if unsticked first, but
  not for modules used by the code server)
